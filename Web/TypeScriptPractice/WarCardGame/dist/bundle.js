(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function sayHello(name) {
    return "Hello from " + name + ". This is a pretty baller superset language.";
}
exports.sayHello = sayHello;

},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var greet_1 = require("./greet");
var Suit;
(function (Suit) {
    Suit[Suit["SPADE"] = 0] = "SPADE";
    Suit[Suit["CLUB"] = 1] = "CLUB";
    Suit[Suit["HEART"] = 2] = "HEART";
    Suit[Suit["DIAMOND"] = 3] = "DIAMOND";
})(Suit || (Suit = {}));
var Rank;
(function (Rank) {
    Rank[Rank["TWO"] = 0] = "TWO";
    Rank[Rank["THREE"] = 1] = "THREE";
    Rank[Rank["FOUR"] = 2] = "FOUR";
    Rank[Rank["FIVE"] = 3] = "FIVE";
    Rank[Rank["SIX"] = 4] = "SIX";
    Rank[Rank["SEVEN"] = 5] = "SEVEN";
    Rank[Rank["EIGHT"] = 6] = "EIGHT";
    Rank[Rank["NINE"] = 7] = "NINE";
    Rank[Rank["TEN"] = 8] = "TEN";
    Rank[Rank["JACK"] = 9] = "JACK";
    Rank[Rank["QUEEN"] = 10] = "QUEEN";
    Rank[Rank["KING"] = 11] = "KING";
    Rank[Rank["ACE"] = 12] = "ACE";
})(Rank || (Rank = {}));
var Deck = /** @class */ (function () {
    function Deck() {
        this.currentIndex = 0;
        this.deck = [
            { suit: Suit.SPADE, rank: Rank.TWO },
            { suit: Suit.SPADE, rank: Rank.THREE },
            { suit: Suit.SPADE, rank: Rank.FOUR },
            { suit: Suit.SPADE, rank: Rank.FIVE },
            { suit: Suit.SPADE, rank: Rank.SIX },
            { suit: Suit.SPADE, rank: Rank.SEVEN },
            { suit: Suit.SPADE, rank: Rank.EIGHT },
            { suit: Suit.SPADE, rank: Rank.NINE },
            { suit: Suit.SPADE, rank: Rank.TEN },
            { suit: Suit.SPADE, rank: Rank.JACK },
            { suit: Suit.SPADE, rank: Rank.QUEEN },
            { suit: Suit.SPADE, rank: Rank.KING },
            { suit: Suit.SPADE, rank: Rank.ACE },
            { suit: Suit.CLUB, rank: Rank.TWO },
            { suit: Suit.CLUB, rank: Rank.THREE },
            { suit: Suit.CLUB, rank: Rank.FOUR },
            { suit: Suit.CLUB, rank: Rank.FIVE },
            { suit: Suit.CLUB, rank: Rank.SIX },
            { suit: Suit.CLUB, rank: Rank.SEVEN },
            { suit: Suit.CLUB, rank: Rank.EIGHT },
            { suit: Suit.CLUB, rank: Rank.NINE },
            { suit: Suit.CLUB, rank: Rank.TEN },
            { suit: Suit.CLUB, rank: Rank.JACK },
            { suit: Suit.CLUB, rank: Rank.QUEEN },
            { suit: Suit.CLUB, rank: Rank.KING },
            { suit: Suit.CLUB, rank: Rank.ACE },
            { suit: Suit.HEART, rank: Rank.TWO },
            { suit: Suit.HEART, rank: Rank.THREE },
            { suit: Suit.HEART, rank: Rank.FOUR },
            { suit: Suit.HEART, rank: Rank.FIVE },
            { suit: Suit.HEART, rank: Rank.SIX },
            { suit: Suit.HEART, rank: Rank.SEVEN },
            { suit: Suit.HEART, rank: Rank.EIGHT },
            { suit: Suit.HEART, rank: Rank.NINE },
            { suit: Suit.HEART, rank: Rank.TEN },
            { suit: Suit.HEART, rank: Rank.JACK },
            { suit: Suit.HEART, rank: Rank.QUEEN },
            { suit: Suit.HEART, rank: Rank.KING },
            { suit: Suit.HEART, rank: Rank.ACE },
            { suit: Suit.DIAMOND, rank: Rank.TWO },
            { suit: Suit.DIAMOND, rank: Rank.THREE },
            { suit: Suit.DIAMOND, rank: Rank.FOUR },
            { suit: Suit.DIAMOND, rank: Rank.FIVE },
            { suit: Suit.DIAMOND, rank: Rank.SIX },
            { suit: Suit.DIAMOND, rank: Rank.SEVEN },
            { suit: Suit.DIAMOND, rank: Rank.EIGHT },
            { suit: Suit.DIAMOND, rank: Rank.NINE },
            { suit: Suit.DIAMOND, rank: Rank.TEN },
            { suit: Suit.DIAMOND, rank: Rank.JACK },
            { suit: Suit.DIAMOND, rank: Rank.QUEEN },
            { suit: Suit.DIAMOND, rank: Rank.KING },
            { suit: Suit.DIAMOND, rank: Rank.ACE }
        ];
    }
    Deck.prototype.printAllDeck = function () {
        console.log('Printing the entire deck.');
        this.deck.forEach(function (element) {
            console.log(Rank[element.rank] + " " + Suit[element.suit]);
        });
    };
    Deck.prototype.printDeck = function (greaterThan) {
        this.deck.forEach(function (element) {
            if (element.rank > greaterThan) {
                console.log(Rank[element.rank] + " " + Suit[element.suit]);
            }
        });
    };
    Deck.prototype.shuffleDeck = function () {
        var shuffledDeck = [];
        while (this.deck.length > 0) {
            var max = this.deck.length - 1;
            var min = 0;
            var index = Math.floor(Math.random() * (max - min + 1) + min);
            var temp = this.deck[0];
            this.deck[0] = this.deck[index];
            this.deck[index] = temp;
            shuffledDeck.push(this.deck.shift());
        }
        this.deck = shuffledDeck;
        console.log('Deck size!!!');
        console.log(this.deck.length);
    };
    Deck.prototype.drawCard = function () {
        var card = this.deck[this.currentIndex];
        var elt = document.getElementById("greeting");
        elt.innerText = Rank[card.rank] + " " + Suit[card.suit];
        console.log("Current Card: " + this.currentIndex + ", Remaining Cards: " + (this.deck.length - this.currentIndex));
        //console.log(`${Rank[card.rank]} ${Suit[card.suit]}`);
        this.currentIndex++;
        if (this.currentIndex > this.deck.length - 1) {
            this.currentIndex = 0;
            this.shuffleDeck();
        }
    };
    return Deck;
}());
function showHello(divName, name) {
    var elt = document.getElementById(divName);
    elt.innerText = greet_1.sayHello(name);
}
showHello("greeting", "TypeScript");
var deck = new Deck();
console.log("Current Cards: " + deck.deck.length);
deck.shuffleDeck();
//deck.printAllDeck();
var el2 = document.getElementById('drawCard');
el2.onclick = function () {
    deck.drawCard();
    return false;
};

},{"./greet":1}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
